<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Mazouri]]></title>
  <subtitle><![CDATA[我的博客]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://mazouri.me/"/>
  <updated>2016-04-04T07:33:45.000Z</updated>
  <id>http://mazouri.me/</id>
  
  <author>
    <name><![CDATA[Mazouri]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[USA visa questions]]></title>
    <link href="http://mazouri.me/2016/04/03/USA-visa-questions/"/>
    <id>http://mazouri.me/2016/04/03/USA-visa-questions/</id>
    <published>2016-04-03T14:08:12.000Z</published>
    <updated>2016-04-04T07:33:45.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u5E38_u89C1_u95EE_u9898_uFF08_u82F1_u6587_uFF09"><a href="#u5E38_u89C1_u95EE_u9898_uFF08_u82F1_u6587_uFF09" class="headerlink" title="常见问题（英文）"></a>常见问题（英文）</h2><ol>
<li><h3 id="what_are_you_going_to_America_for_3F"><a href="#what_are_you_going_to_America_for_3F" class="headerlink" title="what are you going to America for?"></a>what are you going to America for?</h3><h3 id="what_u2019s_your_reason_for_going_to_the_United_States_3F"><a href="#what_u2019s_your_reason_for_going_to_the_United_States_3F" class="headerlink" title="what’s your reason for going to the United States?"></a>what’s your reason for going to the United States?</h3><h3 id="what_will_you_do_in_the_USA_3F"><a href="#what_will_you_do_in_the_USA_3F" class="headerlink" title="what will you do in the USA?"></a>what will you do in the USA?</h3><h3 id="what_is_your_purpose_for_the_visa_3F"><a href="#what_is_your_purpose_for_the_visa_3F" class="headerlink" title="what is your purpose for the visa?"></a>what is your purpose for the visa?</h3><a id="more"></a>
</li>
<li><h3 id="have_you_traveld_abroad_before_3F"><a href="#have_you_traveld_abroad_before_3F" class="headerlink" title="have you traveld abroad before?"></a>have you traveld abroad before?</h3><h3 id="have_you_ever_been_to_aside_of_China_3F_have_you_ever_gone_abroad_3F"><a href="#have_you_ever_been_to_aside_of_China_3F_have_you_ever_gone_abroad_3F" class="headerlink" title="have you ever been to aside of China? have you ever gone abroad?"></a>have you ever been to aside of China? have you ever gone abroad?</h3></li>
<li><h3 id="do_you_have_any_relatives_in_the_US_3F"><a href="#do_you_have_any_relatives_in_the_US_3F" class="headerlink" title="do you have any relatives in the US?"></a>do you have any relatives in the US?</h3></li>
<li><h3 id="what_do_your_parents_do_3F"><a href="#what_do_your_parents_do_3F" class="headerlink" title="what do your parents do?"></a>what do your parents do?</h3></li>
<li><h3 id="how_long_will_you_stay_in_the_US_3F"><a href="#how_long_will_you_stay_in_the_US_3F" class="headerlink" title="how long will you stay in the US?"></a>how long will you stay in the US?</h3></li>
<li><h3 id="do_you_have_any_work_experience_3F_how_many_years_have_you_worked_3F"><a href="#do_you_have_any_work_experience_3F_how_many_years_have_you_worked_3F" class="headerlink" title="do you have any work experience? how many years have you worked?"></a>do you have any work experience? how many years have you worked?</h3></li>
<li><h3 id="what_is_your_career_goal_3F"><a href="#what_is_your_career_goal_3F" class="headerlink" title="what is your career goal?"></a>what is your career goal?</h3></li>
<li><h3 id="will_you_settle_down_permanently_in_America_3F"><a href="#will_you_settle_down_permanently_in_America_3F" class="headerlink" title="will you settle down permanently in America?"></a>will you settle down permanently in America?</h3></li>
<li><h3 id="what_will_you_do_if_you_don_u2019t_get_this_visa_3F"><a href="#what_will_you_do_if_you_don_u2019t_get_this_visa_3F" class="headerlink" title="what will you do if you don’t get this visa?"></a>what will you do if you don’t get this visa?</h3></li>
<li><h3 id="are_you_a_worker_or_a_student_now_3F"><a href="#are_you_a_worker_or_a_student_now_3F" class="headerlink" title="are you a worker or a student now?"></a>are you a worker or a student now?</h3></li>
<li><h3 id="what/where_are_working_now_3F"><a href="#what/where_are_working_now_3F" class="headerlink" title="what/where are working now?"></a>what/where are working now?</h3></li>
<li><h3 id="what_does_your_company_do_3F"><a href="#what_does_your_company_do_3F" class="headerlink" title="what does your company do?"></a>what does your company do?</h3></li>
<li><h3 id="what_have_down_after_you_graduated_from_university_3F"><a href="#what_have_down_after_you_graduated_from_university_3F" class="headerlink" title="what have down after you graduated from university?"></a>what have down after you graduated from university?</h3></li>
<li><h3 id="how_long_does_it_take_to_commute_to_your_work_place_3F"><a href="#how_long_does_it_take_to_commute_to_your_work_place_3F" class="headerlink" title="how long does it take to commute to your work place?"></a>how long does it take to commute to your work place?</h3></li>
<li><h3 id="where_is_your_company_located_in_3F"><a href="#where_is_your_company_located_in_3F" class="headerlink" title="where is your company located in?"></a>where is your company located in?</h3></li>
<li><h3 id="how_long_have_you_been_in_beijing_3F_why_did_you_live_in_beijing_3F_do_you_love_this_city_3F"><a href="#how_long_have_you_been_in_beijing_3F_why_did_you_live_in_beijing_3F_do_you_love_this_city_3F" class="headerlink" title="how long have you been in beijing? why did you live in beijing? do you love this city?"></a>how long have you been in beijing? why did you live in beijing? do you love this city?</h3></li>
<li><h3 id="why_did_you_choose_your_present_job_3F"><a href="#why_did_you_choose_your_present_job_3F" class="headerlink" title="why did you choose your present job?"></a>why did you choose your present job?</h3></li>
<li><h3 id="where_is_your_hukou_28_u6237_u53E3_29_3F"><a href="#where_is_your_hukou_28_u6237_u53E3_29_3F" class="headerlink" title="where is your hukou(户口)?"></a>where is your hukou(户口)?</h3></li>
<li><h3 id="give_me_three_reasons_that_you_will_come_back_to_china_3F"><a href="#give_me_three_reasons_that_you_will_come_back_to_china_3F" class="headerlink" title="give me three reasons that you will come back to china?"></a>give me three reasons that you will come back to china?</h3></li>
<li><h3 id="you_can_also_make_more_of_this_kind_of_money_in_US_2C_why_don_u2019t_you_want_earn_more_3F_why_you_come_back_to_China_instead_of_finding_a_job_in_America_3F"><a href="#you_can_also_make_more_of_this_kind_of_money_in_US_2C_why_don_u2019t_you_want_earn_more_3F_why_you_come_back_to_China_instead_of_finding_a_job_in_America_3F" class="headerlink" title="you can also make more of this kind of money in US, why don’t you want earn more? why you come back to China instead of finding a job in America?"></a>you can also make more of this kind of money in US, why don’t you want earn more? why you come back to China instead of finding a job in America?</h3></li>
<li><h3 id="Can_you_explain_why_90_25_Chinese_students_didn_u2019t_come_back_3F"><a href="#Can_you_explain_why_90_25_Chinese_students_didn_u2019t_come_back_3F" class="headerlink" title="Can you explain why 90% Chinese students didn’t come back?"></a>Can you explain why 90% Chinese students didn’t come back?</h3></li>
<li><h3 id="how_much_do_you_expect_you_will_have_to_spend_in_the_United_States_3F"><a href="#how_much_do_you_expect_you_will_have_to_spend_in_the_United_States_3F" class="headerlink" title="how much do you expect you will have to spend in the United States?"></a>how much do you expect you will have to spend in the United States?</h3></li>
<li><h3 id="do_you_support_yourself_during_your_vacation_int_the_United_States_3F"><a href="#do_you_support_yourself_during_your_vacation_int_the_United_States_3F" class="headerlink" title="do you support yourself during your vacation int the United States?"></a>do you support yourself during your vacation int the United States?</h3></li>
<li><h3 id="who_will_be_your_sponsor_28_u4ECB_u7ECD_u4EBA_u3001_u8D5E_u52A9_u8005_29_3F"><a href="#who_will_be_your_sponsor_28_u4ECB_u7ECD_u4EBA_u3001_u8D5E_u52A9_u8005_29_3F" class="headerlink" title="who will be your sponsor(介绍人、赞助者)?"></a>who will be your sponsor(介绍人、赞助者)?</h3></li>
<li><h3 id="how_much_do_you_earn_now_3F"><a href="#how_much_do_you_earn_now_3F" class="headerlink" title="how much do you earn now?"></a>how much do you earn now?</h3><h3 id="how_much_do_you_earn_per_month_3F"><a href="#how_much_do_you_earn_per_month_3F" class="headerlink" title="how much do you earn per month?"></a>how much do you earn per month?</h3><h3 id="how_much_will_you_earn_when_you_come_back_3F"><a href="#how_much_will_you_earn_when_you_come_back_3F" class="headerlink" title="how much will you earn when you come back?"></a>how much will you earn when you come back?</h3></li>
<li><h3 id="how_long_have_you_prepared_your_visa_interview_3F"><a href="#how_long_have_you_prepared_your_visa_interview_3F" class="headerlink" title="how long have you prepared your visa interview?"></a>how long have you prepared your visa interview?</h3></li>
<li><h3 id="did_you_cheat_3F"><a href="#did_you_cheat_3F" class="headerlink" title="did you cheat?"></a>did you cheat?</h3></li>
<li><h3 id="when_are_you_going_to_US_3F"><a href="#when_are_you_going_to_US_3F" class="headerlink" title="when are you going to US?"></a>when are you going to US?</h3></li>
<li><h3 id="have_you_booked_your_air_ticket_3F"><a href="#have_you_booked_your_air_ticket_3F" class="headerlink" title="have you booked your air ticket?"></a>have you booked your air ticket?</h3></li>
<li><h3 id="what_u2019s_your_name_3F"><a href="#what_u2019s_your_name_3F" class="headerlink" title="what’s your name?"></a>what’s your name?</h3></li>
<li><h3 id="what_does_your_first_name_mean_3F"><a href="#what_does_your_first_name_mean_3F" class="headerlink" title="what does your first name mean?"></a>what does your first name mean?</h3></li>
<li><h3 id="how_old_are_you_3F"><a href="#how_old_are_you_3F" class="headerlink" title="how old are you?"></a>how old are you?</h3></li>
<li><h3 id="where_are_from_3F"><a href="#where_are_from_3F" class="headerlink" title="where are from?"></a>where are from?</h3><h3 id="where_is_your_hometown_3F"><a href="#where_is_your_hometown_3F" class="headerlink" title="where is your hometown?"></a>where is your hometown?</h3></li>
<li><h3 id="do_you_have_sisters_or_brothers_3F"><a href="#do_you_have_sisters_or_brothers_3F" class="headerlink" title="do you have sisters or brothers?"></a>do you have sisters or brothers?</h3></li>
<li><h3 id="what_do_you_think_is_the_best_/_worst_thing_of_the_US_3F"><a href="#what_do_you_think_is_the_best_/_worst_thing_of_the_US_3F" class="headerlink" title="what do you think is the best / worst thing of the US?"></a>what do you think is the best / worst thing of the US?</h3><h3 id="what_is_the_thing_you_like_best_in_America_3F"><a href="#what_is_the_thing_you_like_best_in_America_3F" class="headerlink" title="what is the thing you like best in America?"></a>what is the thing you like best in America?</h3><h3 id="what_is_the_thing_you_like_best_in_China_3F"><a href="#what_is_the_thing_you_like_best_in_China_3F" class="headerlink" title="what is the thing you like best in China?"></a>what is the thing you like best in China?</h3><h3 id="is_the_thing_you_don_u2019t_like_most_in_China_3F"><a href="#is_the_thing_you_don_u2019t_like_most_in_China_3F" class="headerlink" title="is the thing you don’t like most in China?"></a>is the thing you don’t like most in China?</h3></li>
<li><h3 id="what_is_your_dream_3F"><a href="#what_is_your_dream_3F" class="headerlink" title="what is your dream?"></a>what is your dream?</h3></li>
<li><h3 id="what_is_your_favourite_food_3F"><a href="#what_is_your_favourite_food_3F" class="headerlink" title="what is your favourite food?"></a>what is your favourite food?</h3></li>
<li><h3 id="what_is_your_hobby_3F"><a href="#what_is_your_hobby_3F" class="headerlink" title="what is your hobby?"></a>what is your hobby?</h3></li>
<li><h3 id="what_do_you_do_in_your_spare_time_3F"><a href="#what_do_you_do_in_your_spare_time_3F" class="headerlink" title="what do you do in your spare time?"></a>what do you do in your spare time?</h3></li>
<li><h3 id="what_is_your_favourite_pet_3F_Why_3F"><a href="#what_is_your_favourite_pet_3F_Why_3F" class="headerlink" title="what is your favourite pet? Why?"></a>what is your favourite pet? Why?</h3></li>
<li><h3 id="what_kind_of_computer_do_you_have_3F"><a href="#what_kind_of_computer_do_you_have_3F" class="headerlink" title="what kind of computer do you have?"></a>what kind of computer do you have?</h3></li>
<li><h3 id="what_is_your_favourite_america_movie_3F"><a href="#what_is_your_favourite_america_movie_3F" class="headerlink" title="what is your favourite america movie?"></a>what is your favourite america movie?</h3></li>
<li><h3 id="what_is_your_best_/_worst_quality_3F"><a href="#what_is_your_best_/_worst_quality_3F" class="headerlink" title="what is your best / worst quality?"></a>what is your best / worst quality?</h3></li>
<li><h3 id="who_do_you_think_is_the_best_president_of_the_US_3F"><a href="#who_do_you_think_is_the_best_president_of_the_US_3F" class="headerlink" title="who do you think is the best president of the US?"></a>who do you think is the best president of the US?</h3></li>
<li><h3 id="who_do_you_think_is_the_greatest_leader_in_the_world_3F"><a href="#who_do_you_think_is_the_greatest_leader_in_the_world_3F" class="headerlink" title="who do you think is the greatest leader in the world?"></a>who do you think is the greatest leader in the world?</h3></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u5E38_u89C1_u95EE_u9898_uFF08_u82F1_u6587_uFF09"><a href="#u5E38_u89C1_u95EE_u9898_uFF08_u82F1_u6587_uFF09" class="headerlink" title="常见问题（英文）"></a>常见问题（英文）</h2><ol>
<li><h3 id="what_are_you_going_to_America_for_3F"><a href="#what_are_you_going_to_America_for_3F" class="headerlink" title="what are you going to America for?"></a>what are you going to America for?</h3><h3 id="what_u2019s_your_reason_for_going_to_the_United_States_3F"><a href="#what_u2019s_your_reason_for_going_to_the_United_States_3F" class="headerlink" title="what’s your reason for going to the United States?"></a>what’s your reason for going to the United States?</h3><h3 id="what_will_you_do_in_the_USA_3F"><a href="#what_will_you_do_in_the_USA_3F" class="headerlink" title="what will you do in the USA?"></a>what will you do in the USA?</h3><h3 id="what_is_your_purpose_for_the_visa_3F"><a href="#what_is_your_purpose_for_the_visa_3F" class="headerlink" title="what is your purpose for the visa?"></a>what is your purpose for the visa?</h3>]]>
    
    </summary>
    
      <category term="English，visa" scheme="http://mazouri.me/tags/English%EF%BC%8Cvisa/"/>
    
      <category term="English" scheme="http://mazouri.me/categories/English/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu Terminal shortcuts]]></title>
    <link href="http://mazouri.me/2016/04/03/Ubuntu-Terminal-shortcuts/"/>
    <id>http://mazouri.me/2016/04/03/Ubuntu-Terminal-shortcuts/</id>
    <published>2016-04-03T14:02:14.000Z</published>
    <updated>2016-04-03T14:06:45.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u5FEB_u6377_u952E_u96C6_u5408"><a href="#u5FEB_u6377_u952E_u96C6_u5408" class="headerlink" title="快捷键集合"></a>快捷键集合</h2><p>快捷键 功能<br>Tab 自动补全<br>Ctrl+a 光标移动到开始位置<br>Ctrl+e 光标移动到最末尾<br><a id="more"></a><br>Ctrl+k 删除此处至末尾的所有内容<br>Ctrl+u 删除此处至开始的所有内容<br>Ctrl+d 删除当前字符<br>Ctrl+h 删除当前字符前一个字符<br>Ctrl+w 删除此处到左边的单词<br>Ctrl+y 粘贴由 Ctrl+u ， Ctrl+d ， Ctrl+w 删除的单词<br>Ctrl+l 相当于clear，即清屏<br>Ctrl+r 查找历史命令<br>Ctrl+b 向回移动光标<br>Ctrl+f 向前移动光标<br>Ctrl+t 将光标位置的字符和前一个字符进行位置交换<br>Ctrl+&amp; 恢复 ctrl+h 或者 ctrl+d 或者 ctrl+w 删除的内容<br>Ctrl+S 暂停屏幕输出<br>Ctrl+Q 继续屏幕输出<br>Ctrl+Left-Arrow 光标移动到上一个单词的词首<br>Ctrl+Right-Arrow 光标移动到下一个单词的词尾<br>Ctrl+p 向上显示缓存命令<br>Ctrl+n 向下显示缓存命令<br>Ctrl+d 关闭终端<br>Ctrl+xx 在EOL和当前光标位置移动<br>Ctrl+x@ 显示可能hostname补全<br>Ctrl+c 终止进程/命令<br>Shift +上或下 终端上下滚动<br>Shift+PgUp/PgDn 终端上下翻页滚动<br>Ctrl+Shift+n 新终端<br>alt+F2 输入gnome-terminal打开终端<br>Shift+Ctrl+T 打开新的标签页<br>Shift+Ctrl+W 关闭标签页<br>Shift+Ctrl+C 复制<br>Shift+Ctrl+V 粘贴<br>Alt+数字 切换至对应的标签页<br>Shift+Ctrl+N 打开新的终端窗口<br>Shift+Ctrl+Q 管壁终端窗口<br>Shift+Ctrl+PgUp/PgDn 左移右移标签页<br>Ctrl+PgUp/PgDn 切换标签页<br>F1 打开帮助指南<br>F10 激活菜单栏<br>F11 全屏切换<br>Alt+F 打开 “文件” 菜单（file）<br>Alt+E 打开 “编辑” 菜单（edit）<br>Alt+V 打开 “查看” 菜单（view）<br>Alt+S 打开 “搜索” 菜单（search）<br>Alt+T 打开 “终端” 菜单（terminal）<br>Alt+H 打开 “帮助” 菜单（help）</p>
<p>另外一些小技巧包括：在终端窗口命令提示符下，连续按两次 Tab 键、或者连续按三次 Esc 键、或者按 Ctrl+I 组合键，将显示所有的命令及工具名称。Application 键即位置在键盘上右 Ctrl 键左边的那个键，作用相当于单击鼠标右键。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u5FEB_u6377_u952E_u96C6_u5408"><a href="#u5FEB_u6377_u952E_u96C6_u5408" class="headerlink" title="快捷键集合"></a>快捷键集合</h2><p>快捷键 功能<br>Tab 自动补全<br>Ctrl+a 光标移动到开始位置<br>Ctrl+e 光标移动到最末尾<br>]]>
    
    </summary>
    
      <category term="快捷键，ubuntu" scheme="http://mazouri.me/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE%EF%BC%8Cubuntu/"/>
    
      <category term="快捷工作" scheme="http://mazouri.me/categories/%E5%BF%AB%E6%8D%B7%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[Practice Speaking 流利说][April]]]></title>
    <link href="http://mazouri.me/2016/04/02/Practice-Speaking-%E6%B5%81%E5%88%A9%E8%AF%B4-April/"/>
    <id>http://mazouri.me/2016/04/02/Practice-Speaking-流利说-April/</id>
    <published>2016-04-02T06:05:17.000Z</published>
    <updated>2016-04-02T11:13:11.000Z</updated>
    <content type="html"><![CDATA[<p>##【白领一族*第一辑】</p>
<a id="more"></a>
<p>###【Lesson1 面试应试者】<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">M</span>: <span class="string">Tell me abount yourselef, Sharon. Why are you applying for this job!</span></span><br><span class="line"></span><br><span class="line"><span class="http"><span class="attribute">W</span>: <span class="string">In my research abount Millennium, it sounds like a perfit fit for me.</span></span><br><span class="line"></span><br><span class="line"><span class="http"><span class="attribute">M</span>: <span class="string">Why is that?</span></span><br><span class="line"></span><br><span class="line"><span class="http"><span class="attribute">W</span>: <span class="string">This company has won a lot of awards for its R&amp;D. I also love the new Marketing campaign.</span></span><br><span class="line"></span><br><span class="line"><span class="http"><span class="attribute">M</span>: <span class="string">You did your homework. Why are you a good fit? What can you bring to the team?</span></span><br><span class="line"></span><br><span class="line"><span class="http"><span class="attribute">W</span>: <span class="string">As my references will tell you, I am an over-achiever. I excel at mutil-tasking and I am an enthusiastic team player.</span></span><br><span class="line"></span><br><span class="line"><span class="http"><span class="attribute">M</span>: <span class="string">Good, good. Have you done any computer work?</span></span><br><span class="line"></span><br><span class="line"><span class="http"><span class="attribute">W</span>: <span class="string">As a free-lancer, I collaborated with my client to develop a web page.</span></span><br><span class="line"></span><br><span class="line"><span class="http"><span class="attribute">M</span>: <span class="string">Are you proficient in Microsoft and Adobe?</span></span><br><span class="line"></span><br><span class="line"><span class="http"><span class="attribute">W</span>: <span class="string">Yes, I am.</span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure></p>
<p>…not the end…</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>##【白领一族*第一辑】</p>]]>
    
    </summary>
    
      <category term="English" scheme="http://mazouri.me/tags/English/"/>
    
      <category term="流利说" scheme="http://mazouri.me/tags/%E6%B5%81%E5%88%A9%E8%AF%B4/"/>
    
      <category term="English" scheme="http://mazouri.me/categories/English/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AIYSS(1)-Android生命周期与启动模式]]></title>
    <link href="http://mazouri.me/2016/03/30/AIYSS-1-Android%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E4%B8%8E%E5%90%AF%E5%8A%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>http://mazouri.me/2016/03/30/AIYSS-1-Android生命周期与启动模式/</id>
    <published>2016-03-30T02:38:03.000Z</published>
    <updated>2016-03-30T08:02:18.000Z</updated>
    <content type="html"><![CDATA[<h1 id="u5B98_u7F51"><a href="#u5B98_u7F51" class="headerlink" title="官网"></a>官网</h1><p>Android Guide中关于<a href="http://developer.android.com/guide/components/activities.html" target="_blank" rel="external">Activities</a>的介绍，里面有lifecycle的详细介绍。<br><a href="http://developer.android.com/guide/components/tasks-and-back-stack.html" target="_blank" rel="external">Tasks and Back Stack</a>任务管理与启动模式。</p>
<a id="more"></a>
<h1 id="Android_u5F00_u53D1_u827A_u672F_u63A2_u7D22"><a href="#Android_u5F00_u53D1_u827A_u672F_u63A2_u7D22" class="headerlink" title="Android开发艺术探索"></a>Android开发艺术探索</h1><p>##生命周期</p>
<h3 id="u5178_u578B_u60C5_u51B5_u4E0B_u751F_u547D_u5468_u671F"><a href="#u5178_u578B_u60C5_u51B5_u4E0B_u751F_u547D_u5468_u671F" class="headerlink" title="典型情况下生命周期"></a>典型情况下生命周期</h3><p>1.常用生命周期方法：7个，需要知道(1).调用这些方法时Activity的状态。(2).什么情况下被调用。(3).这些方法里执行哪些操作。<br>2.生命周期的切换过程图：<a href="http://developer.android.com/guide/components/activities.html#Lifecycle" target="_blank" rel="external">流程图</a>， 这个是需要会画会讲的，讲的时候配合各生命周期方法，然后针对这个图附加几种情况说明（page3里(1)-&gt;(6)）</p>
<p>Q1: onStart和onResume、 onPause和onStop从描述上来看差不多，对我们来说有什么实质的不同呢？<br>Q2：假设当前Activity为A，如果这时用户打开一个新ActivityB，那么B的onResume和A的onPause哪个先执行呢？<br>A1A2:page4-&gt;5</p>
<h3 id="u5F02_u5E38_u60C5_u51B5_u4E0B_u751F_u547D_u5468_u671F"><a href="#u5F02_u5E38_u60C5_u51B5_u4E0B_u751F_u547D_u5468_u671F" class="headerlink" title="异常情况下生命周期"></a>异常情况下生命周期</h3><ol>
<li>情况1：资源相关的系统配置发生改变导致Activity被杀死并重新创建（page8-&gt;12）</li>
<li>情况2：资源内存不足导致低优先级的Activity被杀死（page13-&gt;15）</li>
</ol>
<p>##启动模式</p>
<p>(待续…)</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="u5B98_u7F51"><a href="#u5B98_u7F51" class="headerlink" title="官网"></a>官网</h1><p>Android Guide中关于<a href="http://developer.android.com/guide/components/activities.html">Activities</a>的介绍，里面有lifecycle的详细介绍。<br><a href="http://developer.android.com/guide/components/tasks-and-back-stack.html">Tasks and Back Stack</a>任务管理与启动模式。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://mazouri.me/tags/Android/"/>
    
      <category term="code" scheme="http://mazouri.me/tags/code/"/>
    
      <category term="github" scheme="http://mazouri.me/tags/github/"/>
    
      <category term="interview" scheme="http://mazouri.me/tags/interview/"/>
    
      <category term="launchmode" scheme="http://mazouri.me/tags/launchmode/"/>
    
      <category term="lifesycle" scheme="http://mazouri.me/tags/lifesycle/"/>
    
      <category term="Android" scheme="http://mazouri.me/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android interview you should say]]></title>
    <link href="http://mazouri.me/2016/03/30/Android-interview-you-should-say/"/>
    <id>http://mazouri.me/2016/03/30/Android-interview-you-should-say/</id>
    <published>2016-03-30T02:22:39.000Z</published>
    <updated>2016-03-30T07:59:32.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u5199_u5728_u524D_u9762"><a href="#u5199_u5728_u524D_u9762" class="headerlink" title="写在前面"></a>写在前面</h2><p>《Android开发艺术探索》、《Android群英传》、《Android源码开发模式解析与实战》</p>
<a id="more"></a>
<ol>
<li>《开发艺术》：互动地址：<a href="http://blog.csdn.net/singwhatiwanna" target="_blank" rel="external">CSDN博客</a>    <a href="https://github.com/singwhatiwanna" target="_blank" rel="external">Github</a> <a href="https://github.com/singwhatiwanna/android-art-res" target="_blank" rel="external">书中代码</a></li>
<li>《Android群英传》：</li>
<li>《Android源码开发模式解析与实战》：</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u5199_u5728_u524D_u9762"><a href="#u5199_u5728_u524D_u9762" class="headerlink" title="写在前面"></a>写在前面</h2><p>《Android开发艺术探索》、《Android群英传》、《Android源码开发模式解析与实战》</p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://mazouri.me/tags/Android/"/>
    
      <category term="code" scheme="http://mazouri.me/tags/code/"/>
    
      <category term="github" scheme="http://mazouri.me/tags/github/"/>
    
      <category term="interview" scheme="http://mazouri.me/tags/interview/"/>
    
      <category term="Android" scheme="http://mazouri.me/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[打造专属自己的博客-使用Hexo、Github Pages、Markdown（风靡IT圈）]]></title>
    <link href="http://mazouri.me/2016/01/28/%E6%89%93%E9%80%A0%E4%B8%93%E5%B1%9E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2-%E4%BD%BF%E7%94%A8Hexo%E3%80%81Github-Pages%E3%80%81Markdown%EF%BC%88%E9%A3%8E%E9%9D%A1IT%E5%9C%88%EF%BC%89/"/>
    <id>http://mazouri.me/2016/01/28/打造专属自己的博客-使用Hexo、Github-Pages、Markdown（风靡IT圈）/</id>
    <published>2016-01-28T06:31:39.000Z</published>
    <updated>2016-03-30T08:04:17.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u5199_u5728_u524D_u9762"><a href="#u5199_u5728_u524D_u9762" class="headerlink" title="写在前面"></a>写在前面</h2><p>IT圈的，特别是码农们，写博客是最平常的事儿了。国内有不少平台，我之前用过的是<a href="http://www.cnblogs.com/dongdong230" target="_blank" rel="external">cnblogs博客园</a>和<a href="http://blog.csdn.net/dongdong230" target="_blank" rel="external">CSDN</a>，用了一段时间，各有优点，但不是很满意。作为程序员，我们更需要的是属于自己打造，有自己风格的一个地方。</p>
<p>于是，这里，便成了一个程序员很好的选择。<br><a id="more"></a></p>
<h2 id="u5F00_u59CB"><a href="#u5F00_u59CB" class="headerlink" title="开始"></a>开始</h2><h3 id="u73AF_u5883_u51C6_u5907"><a href="#u73AF_u5883_u51C6_u5907" class="headerlink" title="环境准备"></a>环境准备</h3><ol>
<li>安装<strong>Note.js</strong>,下载地址：<a href="http://nodejs.org/download/" target="_blank" rel="external">http://nodejs.org/download/</a>，正常安装就行。</li>
<li>安装Git：<br> Ubuntu：<code>sudo apt-get install git</code>,其他系统请百度</li>
<li>安装Hexo：<br>请先确认已经安装了note和npm：<br><code>node -v</code><br><code>npm -v</code><br>然后安装Hexo: <code>npm install -g hexo</code></li>
</ol>
<h3 id="Github_u521B_u5EFApage"><a href="#Github_u521B_u5EFApage" class="headerlink" title="Github创建page"></a>Github创建page</h3><p>创建一个名为your_user_name.github.io的仓库，按步骤一路到底，你就有了自己的博客网页了。<br>地址栏输入 <a href="https://your_user_name.github.io" target="_blank" rel="external">https://your_user_name.github.io</a> ，即可访问</p>
<h2 id="Hexo_u4F7F_u7528"><a href="#Hexo_u4F7F_u7528" class="headerlink" title="Hexo使用"></a>Hexo使用</h2><p>创建一个属于Hexo的目录<br>进入你的目录，初始化：hexo init<br>生成静态页面： hexo generate或者hexo g<br>启动本地服务进行预览： hexo server或者 hexo s，并在浏览器输入：<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a><br>可能会出一些错误，下面是解决方案：<br>1.ERROR Plugin load failed: hexo-server<br>执行命令：sudo npm install hexo-server解决<br>2.执行hexo server时时报错：<br>    Usage: hexo<br>    …<br>执行命令：sudo npm install hexo-server –save解决</p>
<p>再执行hexo-server时，出现：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Hexo is running <span class="keyword">at</span> <span class="keyword">http</span>://<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">4000</span>/. Press Ctrl+C <span class="built_in">to</span> <span class="built_in">stop</span>.</span><br></pre></td></tr></table></figure></p>
<p>表示成功了。<br>3.还需要执行：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo npm <span class="operator"><span class="keyword">install</span> hexo-renderer-ejs <span class="comment">--save</span></span><br><span class="line">sudo npm <span class="keyword">install</span> hexo-renderer-stylus <span class="comment">--save</span></span><br><span class="line">sudo npm <span class="keyword">install</span> hexo-renderer-marked <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure></p>
<p>否则静态页面没有东西<br>这时候再执行hexo s -g就成功生成页面了。<br>注：hexo s -g 是hexo g和hexo s两步骤的简写，以后都可这么写</p>
<h2 id="Hexo_u4E0EGithub_pages_u5EFA_u7ACB_u5173_u8054"><a href="#Hexo_u4E0EGithub_pages_u5EFA_u7ACB_u5173_u8054" class="headerlink" title="Hexo与Github pages建立关联"></a>Hexo与Github pages建立关联</h2><p>需要进入你创建的hexo的目录，修改_config.yml文件，文档中内容的含义可见：<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="external">_config.yml</a><br>翻到最后一行，修改deploy后的内容：<br>我的是这样的：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repository</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:mazouri/mazouri.github.io.git</span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure></p>
<p>然后执行：hexo deploy<br>这步是部署到你的博客网页：<a href="https://your_user_name.github.io" target="_blank" rel="external">https://your_user_name.github.io</a></p>
<p>注：以后每次修改后部署的步骤是这样的：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo <span class="keyword">generate</span></span><br><span class="line">hexo deploy</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">hexo <span class="keyword">d</span> -<span class="keyword">g</span></span><br></pre></td></tr></table></figure></p>
<p>然后你就可以执行：hexo new “postName” 去新建一篇博客，博客文件默认在source/_post/目录中，通过markdown修改文档即可。</p>
<h2 id="Hexo_u4E3B_u9898"><a href="#Hexo_u4E3B_u9898" class="headerlink" title="Hexo主题"></a>Hexo主题</h2><p>默认的页面并不一定适合你，下面你就需要选择一些你认为美观的博客主题：<br>比较完整的可以参考：<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">Themes</a><br>也可参考经典：<a href="https://hexo.io/themes/" target="_blank" rel="external">经典Themes</a><br>然后把你选择的Theme clone到themes目录下<br>当然，如果你是个前段达人，你可以选择自己去定义主题，不过还是建议你先站在别人的肩膀上。<br>我使用的主题是依赖于<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">Yilia</a>的，可以去我的博客看看效果：<a href="http://mazouri.me/">Mazouri</a>,也可以看看我用的主题：<strong><a href="https://github.com/mazouri/hexo-theme-mazouri" target="_blank" rel="external">hexo-theme-mazouri</a></strong>,以后会对其进行优化。</p>
<h2 id="u4F7F_u7528Markdown"><a href="#u4F7F_u7528Markdown" class="headerlink" title="使用Markdown"></a>使用Markdown</h2><p>我使用的是Haroopad，你可以在<a href="http://pad.haroopress.com/user.html" target="_blank" rel="external">官网</a>，进行不同平台的下载安装。<br>你还需要学学基本的语法：<br><a href="https://maxiang.io/" target="_blank" rel="external">Markdown语法示例文档</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u5199_u5728_u524D_u9762"><a href="#u5199_u5728_u524D_u9762" class="headerlink" title="写在前面"></a>写在前面</h2><p>IT圈的，特别是码农们，写博客是最平常的事儿了。国内有不少平台，我之前用过的是<a href="http://www.cnblogs.com/dongdong230">cnblogs博客园</a>和<a href="http://blog.csdn.net/dongdong230">CSDN</a>，用了一段时间，各有优点，但不是很满意。作为程序员，我们更需要的是属于自己打造，有自己风格的一个地方。</p>
<p>于是，这里，便成了一个程序员很好的选择。<br>]]>
    
    </summary>
    
      <category term="Github pages" scheme="http://mazouri.me/tags/Github-pages/"/>
    
      <category term="Hexo" scheme="http://mazouri.me/tags/Hexo/"/>
    
      <category term="Markdown" scheme="http://mazouri.me/tags/Markdown/"/>
    
      <category term="个人博客" scheme="http://mazouri.me/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://mazouri.me/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[LeakCanary-让内存泄露无所遁形]]></title>
    <link href="http://mazouri.me/2016/01/25/LeakCanary-%E8%AE%A9%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E6%97%A0%E6%89%80%E9%81%81%E5%BD%A2/"/>
    <id>http://mazouri.me/2016/01/25/LeakCanary-让内存泄露无所遁形/</id>
    <published>2016-01-25T02:25:58.000Z</published>
    <updated>2016-01-25T05:45:52.000Z</updated>
    <content type="html"><![CDATA[<h2 id="LeakCanary"><a href="#LeakCanary" class="headerlink" title="LeakCanary"></a>LeakCanary</h2><p>LeakCanary是一个检测Android和Java内存泄露的开源库。</p>
<a id="more"></a>
<h2 id="u5F00_u59CB_u4F7F_u7528"><a href="#u5F00_u59CB_u4F7F_u7528" class="headerlink" title="开始使用"></a>开始使用</h2><p>在你<code>build.gradle</code>中添加如下依赖：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">   debugCompile <span class="string">'com.squareup.leakcanary:leakcanary-android:1.3.1'</span> <span class="comment">// or 1.4-beta1</span></span><br><span class="line">   releaseCompile <span class="string">'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'</span> <span class="comment">// or 1.4-beta1</span></span><br><span class="line">   testCompile <span class="string">'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'</span> <span class="comment">// or 1.4-beta1</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<p>修改你的<code>Application</code>类：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExampleApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate();</span><br><span class="line">    LeakCanary.install(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>这样就可以了！</strong>在你编译时如果某个activity发生内存泄露的话，LeakCanary就会弹出一个类似下图的通知。</p>
<img src="/2016/01/25/LeakCanary-让内存泄露无所遁形/leakcanary1.png" alt="leakcanary1.png" title="">
<h2 id="u4E3A_u4EC0_u4E48_u6211_u4EEC_u8981_u4F7F_u7528LeakCanary_u5462_uFF1F"><a href="#u4E3A_u4EC0_u4E48_u6211_u4EEC_u8981_u4F7F_u7528LeakCanary_u5462_uFF1F" class="headerlink" title="为什么我们要使用LeakCanary呢？"></a>为什么我们要使用LeakCanary呢？</h2><p>问的好！为了更严谨的回答这个问题，我们专门写了一篇博客<a href="https://corner.squareup.com/2015/05/leak-canary.html" target="_blank" rel="external">LeakCanary: Detect all memory leaks!</a></p>
<h2 id="u5982_u4F55_u4F7F_u7528LeakCanary"><a href="#u5982_u4F55_u4F7F_u7528LeakCanary" class="headerlink" title="如何使用LeakCanary"></a>如何使用LeakCanary</h2><p>我们使用<code>RefWatcher</code>去监控那些本该被回收掉的对象(GCed):<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">RefWatcher refWatcher = &#123;...&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// We expect schrodingerCat to be gone soon (or not), let's watch it.</span></span><br><span class="line">refWatcher.watch(schrodingerCat);</span><br></pre></td></tr></table></figure></p>
<p><code>LeakCanary.install()</code>返回的是一个预定义的<code>RefWatcher</code>。同时，它也会启用一个<code>ActivityRefWatcher</code>来检测一个activity在调用<code>Activity.onDestroy()</code>后是否发生内存泄露。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExampleApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RefWatcher <span class="title">getRefWatcher</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">    ExampleApplication application = (ExampleApplication) context.getApplicationContext();</span><br><span class="line">    <span class="keyword">return</span> application.refWatcher;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> RefWatcher refWatcher;</span><br><span class="line"></span><br><span class="line">  <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate();</span><br><span class="line">    refWatcher = LeakCanary.install(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>当然，你可以使用<code>RefWatcher</code>去监控Fragment的内存泄露：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    RefWatcher refWatcher = ExampleApplication.getRefWatcher(getActivity());</span><br><span class="line">    refWatcher.watch(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="LeakCanary_u7684_u5DE5_u4F5C_u673A_u5236"><a href="#LeakCanary_u7684_u5DE5_u4F5C_u673A_u5236" class="headerlink" title="LeakCanary的工作机制"></a>LeakCanary的工作机制</h2><ol>
<li><code>RefWatcher.watch()</code>创建一个<a href="https://github.com/square/leakcanary/blob/master/leakcanary-watcher/src/main/java/com/squareup/leakcanary/KeyedWeakReference.java" target="_blank" rel="external">KeyedWeakReference</a>到被监控的对象；</li>
<li>然后，会在后台检查引用是否被清除，如果没有，则会出发GC；</li>
<li>如果引用仍未被清除，就会将堆内存转储到一个.hprof文件并存放在app文件系统中；</li>
<li><code>HeapAnalyzerService</code>在另外的进程中启动，<code>HeapAnalyzer</code>使用<a href="https://github.com/square/haha" target="_blank" rel="external">HAHA</a>解析转储的.hprof文件；</li>
<li>因为唯一的reference key，<code>HeapAnalyzer</code>会找到<code>KeyedWeakReference</code>,并定位到泄露的引用；</li>
<li><code>HeapAnalyzer</code>计算到<code>GC roots</code>的最短强引用路径，来确定是否发生泄露。如果是，就会创建一个引发泄露的引用链；</li>
<li>结果会被传送给App进程中的<code>DisplayLeakService</code>，并且会显示内存泄露的通知。</li>
</ol>
<h2 id="u6211_u662F_u600E_u6837_u62F7_u8D1Dleak_trace_u7684"><a href="#u6211_u662F_u600E_u6837_u62F7_u8D1Dleak_trace_u7684" class="headerlink" title="我是怎样拷贝leak trace的"></a>我是怎样拷贝leak trace的</h2><ol>
<li>你可以在Logcat中看到leak trace：<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">In</span> com.example.leakcanary:<span class="number">1.0</span>:<span class="number">1</span> com.example.leakcanary.<span class="type">MainActivity</span> has leaked:</span><br><span class="line">* <span class="type">GC</span> <span class="type">ROOT</span> thread java.lang.<span class="type">Thread</span>.&lt;<span class="type">Java</span> <span class="type">Local</span>&gt; (named <span class="symbol">'AsyncTask</span> #<span class="number">1</span>')</span><br><span class="line">* references com.example.leakcanary.<span class="type">MainActivity</span>$<span class="number">3.</span><span class="keyword">this</span>$<span class="number">0</span> (anonymous <span class="class"><span class="keyword">class</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">android</span>.<span class="title">os</span>.<span class="title">AsyncTask</span>)</span><br><span class="line"></span>* leaks com.example.leakcanary.<span class="type">MainActivity</span> instance</span><br><span class="line"></span><br><span class="line">* <span class="type">Reference</span> <span class="type">Key</span>: e71f3bf5-d786-<span class="number">4145</span>-<span class="number">8539</span>-<span class="number">584</span>afaecad1d</span><br><span class="line">* <span class="type">Device</span>: <span class="type">Genymotion</span> generic <span class="type">Google</span> <span class="type">Nexus</span> <span class="number">6</span> - <span class="number">5.1</span><span class="number">.0</span> - <span class="type">API</span> <span class="number">22</span> - <span class="number">1440</span>x2560 vbox86p</span><br><span class="line">* <span class="type">Android</span> <span class="type">Version</span>: <span class="number">5.1</span> <span class="type">API</span>: <span class="number">22</span></span><br><span class="line">* <span class="type">Durations</span>: watch=<span class="number">5086</span>ms, gc=<span class="number">110</span>ms, heap dump=<span class="number">435</span>ms, analysis=<span class="number">2086</span>ms</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>你也可以通过actionbar上的分享功能分享leak trace：</p>
<h2 id="u6211_u662F_u5982_u4F55_u89E3_u51B3_u5185_u5B58_u6CC4_u9732_u95EE_u9898_u7684"><a href="#u6211_u662F_u5982_u4F55_u89E3_u51B3_u5185_u5B58_u6CC4_u9732_u95EE_u9898_u7684" class="headerlink" title="我是如何解决内存泄露问题的"></a>我是如何解决内存泄露问题的</h2><p>当你有了leak trace后，找到不应该存在的引用，然后弄清楚为什么这个引用仍然存在。<br>最常见的造成内存泄露的原因有下面几种情况：</p>
<blockquote>
<p>注册没取消（没有unregistered）<br>资源对象没关闭（Cursor没调用close()）<br>匿名类持有外部类的引用，造成context泄露</p>
</blockquote>
<p>如果你没法在代码中发现问题，可以到 Stack Overflow 中创建一个 question，注意使用leakcanary标签。 <a href="http://stackoverflow.com/questions/tagged/leakcanary" target="_blank" rel="external">Stack Overflow question</a></p>
<h2 id="SDK_u5BFC_u81F4_u7684_u5185_u5B58_u6CC4_u9732_u95EE_u9898"><a href="#SDK_u5BFC_u81F4_u7684_u5185_u5B58_u6CC4_u9732_u95EE_u9898" class="headerlink" title="SDK导致的内存泄露问题"></a>SDK导致的内存泄露问题</h2><p>很多已知的内存泄露问题被开源项目和ROM厂商逐渐解决。当这类内存泄露问题发生时，作为app开发者来说，能做的很有限，因此，LeakCanary有一个内置的忽略已知Android泄露问题的列表：<a href="https://github.com/square/leakcanary/blob/master/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidExcludedRefs.java" target="_blank" rel="external">AndroidExcludedRefs.java</a><br>如果你发现了新问题，你可以按如下几步创建一个<a href="https://github.com/square/leakcanary/issues/new" target="_blank" rel="external">issue</a>:</p>
<ol>
<li>提供完整的leak trace信息（包括reference key, device等）</li>
<li>阅读相应版本的Android源代码，找出问题产生的原因</li>
<li>检查最新Android版本是否也有此问题，看看是什么时候解决的</li>
<li>If it’s still happening, build a simple repro case</li>
<li>File an issue on <a href="http://b.android.com" target="_blank" rel="external">b.android.com</a> with the leak trace and the repro case</li>
<li>Create a PR in LeakCanary to update <code>AndroidExcludedRefs.java</code>. Optional: if you find a hack to clear that leak on previous versions of Android, feel free to document it</li>
</ol>
<p>这对最新发布的版本来说非常重要，你将有机会在早期帮助发现内存泄露问题，这将有益于整个Android社区。</p>
<h2 id="u9664_u4E86leak_trace"><a href="#u9664_u4E86leak_trace" class="headerlink" title="除了leak trace"></a>除了leak trace</h2><p>有时候，光有leak trace还不能解决问题，这时，你就要使用<a href="http://eclipse.org/mat/" target="_blank" rel="external">MAT</a> 或者 <a href="https://www.yourkit.com/" target="_blank" rel="external">YourKit</a>挖掘dump文件。<br>下面就来看看如何在dump文件中找出泄露的实例：</p>
<ol>
<li>查找所有的<code>com.squareup.leakcanary.KeyedWeakReference</code>实例</li>
<li>检查 key 字段</li>
<li>找出key字段与LeakCanary所报的reference key相同的KeyedWeakReference</li>
<li>该KeyedWeakReference中的referent字段就是泄露的对象</li>
<li>剩下的，就是动手修复了。最好是检查到 GC root 的最短强引用路径开始</li>
</ol>
<h2 id="u81EA_u5B9A_u4E49"><a href="#u81EA_u5B9A_u4E49" class="headerlink" title="自定义"></a>自定义</h2><h3 id="u81EA_u5B9A_u4E49_u5E76_u4F7F_u7528no-op_u4F9D_u8D56"><a href="#u81EA_u5B9A_u4E49_u5E76_u4F7F_u7528no-op_u4F9D_u8D56" class="headerlink" title="自定义并使用no-op依赖"></a>自定义并使用no-op依赖</h3><p>对于发布版本，<code>leakcanary-android-no-op</code>只有LeakCanary和RefWatcher类，如果你要自定义LeakCanary，请确保这种自定义只在调试版本中发生，因为可能会引用到leakcanary-android-no-op中不存在的类。<br>比方说，你在发布版本的<code>AndroidManifest.xml</code>中声明了ExampleApplication类，你的调试版本中声明了DebugExampleApplication继承自ExampleApplication：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExampleApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RefWatcher <span class="title">getRefWatcher</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">    ExampleApplication application = (ExampleApplication) context.getApplicationContext();</span><br><span class="line">    <span class="keyword">return</span> application.refWatcher;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> RefWatcher refWatcher;</span><br><span class="line"></span><br><span class="line">  <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate();</span><br><span class="line">    refWatcher = installLeakCanary();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> RefWatcher <span class="title">installLeakCanary</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> RefWatcher.DISABLED;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DebugExampleApplication</span> <span class="keyword">extends</span> <span class="title">ExampleApplication</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">protected</span> RefWatcher <span class="title">installLeakCanary</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	RefWatcher refWatcher = ? <span class="comment">// Build a customized RefWatcher</span></span><br><span class="line">    <span class="keyword">return</span> refWatcher;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样的话，除了<code>leakcanary-android-no-op</code>中存在的两个类外，你的发布代码中就不会有对LeakCanary的引用了。</p>
<h3 id="u56FE_u6807_u548C_u6807_u7B7E"><a href="#u56FE_u6807_u548C_u6807_u7B7E" class="headerlink" title="图标和标签"></a>图标和标签</h3><p>DisplayLeakActivity已经有了默认的图标和标签，不过你可以在app中替换下面几个资源文件：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">res/</span><br><span class="line">  drawable-hdpi/</span><br><span class="line">    __leak_canary_icon<span class="class">.png</span></span><br><span class="line">  drawable-mdpi/</span><br><span class="line">    __leak_canary_icon<span class="class">.png</span></span><br><span class="line">  drawable-xhdpi/</span><br><span class="line">    __leak_canary_icon<span class="class">.png</span></span><br><span class="line">  drawable-xxhdpi/</span><br><span class="line">    __leak_canary_icon<span class="class">.png</span></span><br><span class="line">  drawable-xxxhdpi/</span><br><span class="line">    __leak_canary_icon.png</span><br></pre></td></tr></table></figure></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"__leak_canary_display_activity_label"</span>&gt;</span>MyLeaks<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="u4FDD_u5B58leak_traces"><a href="#u4FDD_u5B58leak_traces" class="headerlink" title="保存leak traces"></a>保存leak traces</h3><p><code>DisplayLeakActivity</code>保存了 7 个 dump 文件和 leak trace，你可以在你的app中创建R.integer.__leak_canary_max_stored_leaks来覆盖默认值。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">integer</span> <span class="attribute">name</span>=<span class="value">"__leak_canary_max_stored_leaks"</span>&gt;</span>20<span class="tag">&lt;/<span class="title">integer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="LeakCanary"><a href="#LeakCanary" class="headerlink" title="LeakCanary"></a>LeakCanary</h2><p>LeakCanary是一个检测Android和Java内存泄露的开源库。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://mazouri.me/tags/Android/"/>
    
      <category term="LeakCanary" scheme="http://mazouri.me/tags/LeakCanary/"/>
    
      <category term="内存泄露" scheme="http://mazouri.me/tags/%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2/"/>
    
      <category term="内存泄露" scheme="http://mazouri.me/categories/%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
</feed>
